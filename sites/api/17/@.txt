https://rapidapi.com/gbattaglia/api/astrologer
Astrologer
API creator
Astrologer
subscribers
1355 subs
category
Science
===pricing
Basic
$0.00
/mo
Requests
40 / Day
Hard Limit
Features
Pro Compensation Plan
Rate Limit
1000 requests per hour
Start Free Plan
Pro
⭐️
Recommended
$5.00
/mo
Requests
500 / Day
Hard Limit
Features
Pro Compensation Plan
Rate Limit
-
Choose This Plan
Ultra
$15.00
/mo
Requests
2.000 / Day
Hard Limit
Features
Pro Compensation Plan
Rate Limit
-
Choose This Plan
Mega
$50.00
/mo
Requests
10.000 / Day
Hard Limit
Features
Pro Compensation Plan
Rate Limit
-
Choose This Plan
====
API Overview
Everything you need for astrology.
Astrology made easy! Astrological calculation, birth charts and synastry charts in SVG format. Plus all astrological data.
Astrologer API
The Astrologer API is a RESTful service providing extensive astrology calculations, designed for seamless integration into your projects. It offers a rich set of astrological data and insights, making it an invaluable tool for both developers and astrology enthusiasts.
Documentation
Explore the comprehensive API documentation with interactive features:
Astrologer API OpenAPI (Swagger) Documentation
Getting Started
To begin using the Astrologer API, include your API key in the request headers. This key is essential for authenticating your requests and ensuring they are processed correctly.
Example Request Headers
Ensure your API requests include the following headers:
headers: {
'X-RapidAPI-Host': 'astrologer.p.rapidapi.com',
'X-RapidAPI-Key': 'YOUR_API_KEY'
}
Replace YOUR_API_KEY with your actual API key obtained during registration.
Features
Charts
The Astrologer API provides various *-chart endpoints with customizable options:
Languages
You can specify the lang parameter to select the language for your chart. Available options are:
EN: English (default)
FR: French
PT: Portuguese
ES: Spanish
TR: Turkish
RU: Russian
IT: Italian
CN: Chinese
DE: German
HI: Hindi
Example API request:
{
"subject": {
"year": 1980,
"month": 12,
"day": 12,
"hour": 12,
"minute": 12,
"longitude": 0,
"latitude": 51.4825766,
"city": "London",
"nation": "GB",
"timezone": "Europe/London",
"name": "John Doe",
"zodiac_type": "Tropic"
},
"language": "RU"
}
Themes
Customize the appearance of your charts using the theme parameter. Available themes include:
classic: A traditional, colorful theme
light: A modern, soft-colored light theme
dark: A modern dark theme
dark-high-contrast: A dark theme with enhanced contrast for better readability
Example API request:
{
"subject": {
"year": 1980,
"month": 12,
"day": 12,
"hour": 12,
"minute": 12,
"longitude": 0,
"latitude": 51.4825766,
"city": "London",
"nation": "GB",
"timezone": "Europe/London",
"name": "John Doe",
"zodiac_type": "Tropic"
},
"theme": "dark"
}
Zodiac Types
You can choose between the Sidereal and Tropical zodiacs using the zodiac_type parameter in the subject key of most endpoints.
tropic: Tropical zodiac (default)
sidereal: Sidereal zodiac
If you select sidereal, you must also specify the sidereal_mode parameter, which offers various ayanamsha (zodiacal calculation modes):
FAGAN_BRADLEY
LAHIRI (standard for Vedic astrology)
DELUCE
RAMAN
USHASHASHI
KRISHNAMURTI
DJWHAL_KHUL
YUKTESHWAR
JN_BHASIN
BABYL_KUGLER1
BABYL_KUGLER2
BABYL_KUGLER3
BABYL_HUBER
BABYL_ETPSC
ALDEBARAN_15TAU
HIPPARCHOS
SASSANIAN
J2000
J1900
B1950
The most commonly used ayanamshas are FAGAN_BRADLEY and LAHIRI.
Example API request:
{
"subject": {
"year": 1980,
"month": 12,
"day": 12,
"hour": 12,
"minute": 12,
"longitude": 0,
"latitude": 51.4825766,
"city": "London",
"nation": "GB",
"timezone": "Europe/London",
"name": "John Doe",
"zodiac_type": "Sidereal",
"sidereal_mode": "FAGAN_BRADLEY"
}
}
House Systems
The HouseSystem parameter defines the method used to divide the celestial sphere into twelve houses. Here are the available options:
A: Equal
B: Alcabitius
C: Campanus
D: Equal (MC)
F: Carter poli-equ.
H: Horizon/Azimut
I: Sunshine
i: Sunshine/Alt.
K: Koch
L: Pullen SD
M: Morinus
N: Equal/1=Aries
O: Porphyry
P: Placidus
Q: Pullen SR
R: Regiomontanus
S: Sripati
T: Polich/Page
U: Krusinski-Pisa-Goelzer
V: Equal/Vehlow
W: Equal/Whole Sign
X: Axial rotation system/Meridian houses
Y: APC houses
Usually, the standard house system used is Placidus (P).
Example API request:
{
"subject": {
"year": 1980,
"month": 12,
"day": 12,
"hour": 12,
"minute": 12,
"longitude": 0,
"latitude": 51.4825766,
"city": "London",
"nation": "GB",
"timezone": "Europe/London",
"name": "John Doe",
"zodiac_type": "Tropic",
"house_system": "A"
}
}
This allows you to specify the desired house system for calculating and displaying the positions of celestial bodies.
Perspective Types
The PerspectiveType defines the viewpoint from which the positions of celestial bodies are calculated. Here are the available options:
"Apparent Geocentric": Earth-centered and shows the apparent positions of celestial bodies as seen from Earth. This is the most commonly used and the default perspective.
"Heliocentric": Sun-centered.
"Topocentric": This perspective is based on the observer's specific location on the Earth's surface.
"True Geocentric": This perspective is also Earth-centered but shows the true positions of celestial bodies without the apparent shifts caused by Earth's atmosphere.
Usually, the standard perspective used is "Apparent Geocentric".
Example usage in an API request:
{
"subject": {
"year": 1980,
"month": 12,
"day": 12,
"hour": 12,
"minute": 12,
"longitude": 0,
"latitude": 51.4825766,
"city": "London",
"nation": "GB",
"timezone": "Europe/London",
"name": "John Doe",
"zodiac_type": "Tropic",
"perspective": "Heliocentric"
}
}
This allows you to specify the desired perspective for calculating and displaying the positions of celestial bodies.
Wheel Only Charts
To generate charts that contain only the zodiac wheel without any textual information, you can use the wheel_only option in your API call. When this option is set to True, only the zodiac wheel will be returned.
Example API request:
{
"subject": {
"year": 1980,
"month": 12,
"day": 12,
"hour": 12,
"minute": 12,
"longitude": 0,
"latitude": 51.4825766,
"city": "London",
"nation": "GB",
"timezone": "Europe/London",
"name": "John Doe",
"zodiac_type": "Tropic"
},
"wheel_only": true
}
This can be useful for creating clean and simple visual representations of the zodiac without any additional clutter.
Timezones
Accurate astrological calculations require the correct timezone. Refer to the following link for a complete list of timezones:
List of TZ Database Time Zones
Copyright and License
Astrologer API is Free/Libre Open Source Software with an AGPLv3 license. All the terms and conditions of the AGPLv3 license apply to the Astrologer API. You can review and contribute to the source code via the official repositories:
V4 Astrologer API
V3 Astrologer API
Astrologer API is developed by Giacomo Battaglia and is based on Kerykeion, a Python library for astrology calculations by the same author. The underlying tools are built on the Swiss Ephemeris.
Since it is an external API service, integrating data and charts retrieved via the API does not impose any licensing restrictions, allowing use in projects with closed source licenses.
Commercial Use
The Astrologer API can be used in commercial applications, as it operates as an external API. If your application does not directly integrate Kerykeion or other underlying libraries, there are no additional restrictions.
Provider Info
API creator
by
Astrologer
subscribers
1355
subs
category
Science
Contact Provider
get notifications
=====
api
GET
Current Date/Time: Get Data
const url = 'https://astrologer.p.rapidapi.com/api/v4/now';
const options = {
method: 'GET',
headers: {
'x-rapidapi-key': '323be663ccmsh35173cb3c5403c2p10f08fjsnad5cf7b49fa9',
'x-rapidapi-host': 'astrologer.p.rapidapi.com'
}
};
try {
const response = await fetch(url, options);
const result = await response.text();
console.log(result);
} catch (error) {
console.error(error);
}
===
POST
Birth Chart
const url = 'https://astrologer.p.rapidapi.com/api/v4/birth-chart';
const options = {
method: 'POST',
headers: {
'x-rapidapi-key': '323be663ccmsh35173cb3c5403c2p10f08fjsnad5cf7b49fa9',
'x-rapidapi-host': 'astrologer.p.rapidapi.com',
'Content-Type': 'application/json'
},
body: {
subject: {
name: 'Paul',
year: 1994,
month: 10,
day: 11,
hour: 9,
minute: 11,
longitude: 12.4963655,
latitude: 41.9027835,
city: 'Roma',
nation: 'IT',
timezone: 'Europe/Rome',
zodiac_type: 'Tropic'
}
}
};
try {
const response = await fetch(url, options);
const result = await response.text();
console.log(result);
} catch (error) {
console.error(error);
}
===
POST
Synastry Chart
const url = 'https://astrologer.p.rapidapi.com/api/v4/synastry-chart';
const options = {
method: 'POST',
headers: {
'x-rapidapi-key': '323be663ccmsh35173cb3c5403c2p10f08fjsnad5cf7b49fa9',
'x-rapidapi-host': 'astrologer.p.rapidapi.com',
'Content-Type': 'application/json'
},
body: {
first_subject: {
name: 'Paul',
year: 1994,
month: 10,
day: 11,
hour: 9,
minute: 11,
longitude: 12.4963655,
latitude: 41.9027835,
city: 'Roma',
nation: 'IT',
timezone: 'Europe/Rome',
zodiac_type: 'Tropic'
},
second_subject: {
name: 'Sarah',
year: 1998,
month: 11,
day: 10,
hour: 9,
minute: 0,
longitude: 12.4963655,
latitude: 41.9027835,
city: 'Roma',
nation: 'IT',
timezone: 'Europe/Rome',
zodiac_type: 'Tropic'
}
}
};
try {
const response = await fetch(url, options);
const result = await response.text();
console.log(result);
} catch (error) {
console.error(error);
}
===
POST
Transit Chart
const url = 'https://astrologer.p.rapidapi.com/api/v4/transit-chart';
const options = {
method: 'POST',
headers: {
'x-rapidapi-key': '323be663ccmsh35173cb3c5403c2p10f08fjsnad5cf7b49fa9',
'x-rapidapi-host': 'astrologer.p.rapidapi.com',
'Content-Type': 'application/json'
},
body: {
first_subject: {
name: 'Paul',
year: 1994,
month: 10,
day: 11,
hour: 9,
minute: 11,
longitude: 12.4963655,
latitude: 41.9027835,
city: 'Roma',
nation: 'IT',
timezone: 'Europe/Rome',
zodiac_type: 'Tropic'
},
transit_subject: {
year: 2024,
month: 1,
day: 11,
hour: 9,
minute: 11,
longitude: 12.4963655,
latitude: 41.9027835,
city: 'Roma',
nation: 'IT',
timezone: 'Europe/Rome',
zodiac_type: 'Tropic'
}
}
};
try {
const response = await fetch(url, options);
const result = await response.text();
console.log(result);
} catch (error) {
console.error(error);
}
===
POST
Relationship Score
const url = 'https://astrologer.p.rapidapi.com/api/v4/relationship-score';
const options = {
method: 'POST',
headers: {
'x-rapidapi-key': '323be663ccmsh35173cb3c5403c2p10f08fjsnad5cf7b49fa9',
'x-rapidapi-host': 'astrologer.p.rapidapi.com',
'Content-Type': 'application/json'
},
body: {
first_subject: {
name: 'Paul',
year: 1994,
month: 10,
day: 11,
hour: 9,
minute: 11,
longitude: 12.4963655,
latitude: 41.9027835,
city: 'Roma',
nation: 'IT',
timezone: 'Europe/Rome',
zodiac_type: 'Tropic'
},
second_subject: {
name: 'Jane',
year: 1990,
month: 5,
day: 5,
hour: 19,
minute: 11,
longitude: 12.4963655,
latitude: 41.9027835,
city: 'Roma',
nation: 'IT',
timezone: 'Europe/Rome',
zodiac_type: 'Tropic'
}
}
};
try {
const response = await fetch(url, options);
const result = await response.text();
console.log(result);
} catch (error) {
console.error(error);
}
===
POST
Birth Data
const url = 'https://astrologer.p.rapidapi.com/api/v4/birth-data';
const options = {
method: 'POST',
headers: {
'x-rapidapi-key': '323be663ccmsh35173cb3c5403c2p10f08fjsnad5cf7b49fa9',
'x-rapidapi-host': 'astrologer.p.rapidapi.com',
'Content-Type': 'application/json'
},
body: {
subject: {
name: 'Paul',
year: 1994,
month: 10,
day: 11,
hour: 9,
minute: 11,
longitude: 12.4963655,
latitude: 41.9027835,
city: 'Roma',
nation: 'IT',
timezone: 'Europe/Rome',
zodiac_type: 'Tropic'
}
}
};
try {
const response = await fetch(url, options);
const result = await response.text();
console.log(result);
} catch (error) {
console.error(error);
}
===
POST
Natal Aspects Data
const url = 'https://astrologer.p.rapidapi.com/api/v4/natal-aspects-data';
const options = {
method: 'POST',
headers: {
'x-rapidapi-key': '323be663ccmsh35173cb3c5403c2p10f08fjsnad5cf7b49fa9',
'x-rapidapi-host': 'astrologer.p.rapidapi.com',
'Content-Type': 'application/json'
},
body: {
subject: {
name: 'Paul',
year: 1994,
month: 10,
day: 11,
hour: 9,
minute: 11,
longitude: 12.4963655,
latitude: 41.9027835,
city: 'Roma',
nation: 'IT',
timezone: 'Europe/Rome',
zodiac_type: 'Tropic'
}
}
};
try {
const response = await fetch(url, options);
const result = await response.text();
console.log(result);
} catch (error) {
console.error(error);
}
===
POST
Synastry Aspects Data
const url = 'https://astrologer.p.rapidapi.com/api/v4/synastry-aspects-data';
const options = {
method: 'POST',
headers: {
'x-rapidapi-key': '323be663ccmsh35173cb3c5403c2p10f08fjsnad5cf7b49fa9',
'x-rapidapi-host': 'astrologer.p.rapidapi.com',
'Content-Type': 'application/json'
},
body: {
first_subject: {
name: 'Paul',
year: 1994,
month: 10,
day: 11,
hour: 9,
minute: 11,
longitude: 12.4963655,
latitude: 41.9027835,
city: 'Roma',
nation: 'IT',
timezone: 'Europe/Rome',
zodiac_type: 'Tropic'
},
second_subject: {
name: 'Sarah',
year: 1998,
month: 11,
day: 10,
hour: 9,
minute: 0,
longitude: 12.4963655,
latitude: 41.9027835,
city: 'Roma',
nation: 'IT',
timezone: 'Europe/Rome',
zodiac_type: 'Tropic'
}
}
};
try {
const response = await fetch(url, options);
const result = await response.text();
console.log(result);
} catch (error) {
console.error(error);
}